{
  "title": "How To Shed The Project Manager Hat",
  "date": "2023-02-10T13:06:54.222Z",
  "tags": [],
  "draft": true,
  "summary": "",
  "body": {
    "raw": "![](https://images.unsplash.com/photo-1474666488182-66ec723476c6?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=Mnw0MDkwMjh8MHwxfHNlYXJjaHw1fHxIYXRzfGVufDB8fHx8MTY3NjA1MzIxNA&ixlib=rb-4.0.3&q=80&w=1080)\n\nI once worked on a project with a 10-year completion estimate. In software. 10 years. As you can imagine, this project was at a large company with many legacy approaches. And as you can imagine, executing a 10-year project requires a lot of project management. In fact, the majority of the project was not product or engineering work but project management work.\n\nI didn't stick around long enough to see that project come close to completion, but I think even with smaller-scale projects, legacy processes like these creep up in older organizations and even in some startups. If you come from an organization like this or are trying to transition into a true product management role at most modern organizations, you'll need to find a way to throw away the project management hat and focus on product management instead.\n\nFirst, let's define what project management is. Project management is a reporting and accountability function. Project managers are tasked with ensuring a project stays on track. They do this with Gantt charts and PowerPoints. They do this with spreadsheets and Slack messages. Project managers generally do not do the work. Instead, they bring people together to help facilitate the completion of the work. They force communication when communication is lacking. They push process where chaos might reign supreme.\n\nProject management is an important function in every company, even startups. However, in a product-led, fast-moving startup or organization, project management cannot be conflated with product management. Project management is everyone's job in these companies, while product management is the job of people who have a completely different skillsets focused on strategy, collaboration, and execution. I don't want to minimize the role of project managers, but I do think they tend not to be the right role for fast-moving software companies.\n\nWhat exactly is product management, then? Product management is a function that takes in research and critical thinking and outputs products and features. Product managers are not there to move Jira tickets around. If you subscribe to the idea that project management is a team effort, then anyone on the team can move these tickets and help create transparency. Product managers are on the team to help do two main things:\n\n1.  Distill the vision of the founders/CEO into products and features that can be implemented for today's customers.\n    \n2.  Speak with customers directly and research the market to formulate product strategies that drive the company's mission forward.\n    \n\nHopefully, the delineation of roles is clear. Now, we can get into how and why you might need to shed the project manager hat as you transition into a product manager role. Many companies have roles with \"product\" in the title. These roles are not created. For example, the role of a product owner is one that confused me early in my career. I thought that's what I wanted. And for many people, it's exactly what they want. But a product owner is not a product manager. A product owner is similar to a scrum master or a project manager. Their job is to coordinate tasks. If your company has team collaboration and ownership of this process, you don't need a product owner. But you do need product managers.\n\nSo, it's a natural career progression opportunity to move from product owner or project manager to product manager. But the actions you'll take on the job are different. The biggest change you'll face when shedding the project manager hat is that of process. Process is everything when you're the one managing a project. If you, alone, have to report and coordinate, processes are key. However, in a collaborative product development environment, process is distributed across team members. Opening tickets and moving those tickets through whatever tracking system the engineering team uses is likely going to be the responsibility of the individual contributor (IC). Project planning is going to be more iterative and less process-driven as well. And pivotsâ€¦oh, there will be pivots.\n\nThe last point is, perhaps, the hardest part of the project manager hat to shed. When managing projects, future visibility is important. When working on a fast-moving product team, long-term visibility does not exist. It's like driving through dense fog. You can prepare, you can create strategies for piercing the fog, but you also have to be ready to swerve if needed. When you are coming from a process-first background, these types of pivots can be hard.\n\nThe best way to prepare yourself for the unknown is to commit to current work and hold your future plans loosely. Seems easy, but it's not. As soon as you start planning for the future, it's easy for you mind to cement those details. This is why I tend not to like roadmaps. Roadmaps are concrete and hard to pivot around. Bets are things you can prioritize, though. Ideas are things you can categorize. If something in the market changes and you suddenly have new direction, your ideas live on, but the bets you take related to those ideas change.\n\nOne day, I'll finally get around to writing about my Loosely Held Ideas framework, but the tl;dr is that when you plan for the future in product management, you need to drop the \"plan\". You're not ever planning. You're thinking. When I sit on a beach, staring at the ocean, I'm not making plans. I'm thinking. That's how you should approach the future of your product. By doing this, you'll be much better equipped to handle the transition from project management to product management.\n\nProject managers, scrum masters, product owners, et al are useful roles in the right context. I'm assuming throughout this article that you are moving into a context where those roles do not make sense. If that's true, it's time for you to hang up your old hat and grab a new one from the rack. Because project management and product management are two different beasts.\n",
    "code": "var Component=(()=>{var lr=Object.create;var I=Object.defineProperty;var ur=Object.getOwnPropertyDescriptor;var cr=Object.getOwnPropertyNames;var fr=Object.getPrototypeOf,dr=Object.prototype.hasOwnProperty;var H=(u,a)=>()=>(a||u((a={exports:{}}).exports,a),a.exports),mr=(u,a)=>{for(var b in a)I(u,b,{get:a[b],enumerable:!0})},we=(u,a,b,_)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let y of cr(a))!dr.call(u,y)&&y!==b&&I(u,y,{get:()=>a[y],enumerable:!(_=ur(a,y))||_.enumerable});return u};var pr=(u,a,b)=>(b=u!=null?lr(fr(u)):{},we(a||!u||!u.__esModule?I(b,\"default\",{value:u,enumerable:!0}):b,u)),hr=u=>we(I({},\"__esModule\",{value:!0}),u);var je=H((wr,xe)=>{xe.exports=React});var Ee=H(q=>{\"use strict\";(function(){\"use strict\";var u=je(),a=Symbol.for(\"react.element\"),b=Symbol.for(\"react.portal\"),_=Symbol.for(\"react.fragment\"),y=Symbol.for(\"react.strict_mode\"),G=Symbol.for(\"react.profiler\"),X=Symbol.for(\"react.provider\"),K=Symbol.for(\"react.context\"),k=Symbol.for(\"react.forward_ref\"),A=Symbol.for(\"react.suspense\"),F=Symbol.for(\"react.suspense_list\"),N=Symbol.for(\"react.memo\"),U=Symbol.for(\"react.lazy\"),Ne=Symbol.for(\"react.offscreen\"),J=Symbol.iterator,Pe=\"@@iterator\";function Ce(e){if(e===null||typeof e!=\"object\")return null;var r=J&&e[J]||e[Pe];return typeof r==\"function\"?r:null}var x=u.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function m(e){{for(var r=arguments.length,t=new Array(r>1?r-1:0),n=1;n<r;n++)t[n-1]=arguments[n];De(\"error\",e,t)}}function De(e,r,t){{var n=x.ReactDebugCurrentFrame,s=n.getStackAddendum();s!==\"\"&&(r+=\"%s\",t=t.concat([s]));var l=t.map(function(i){return String(i)});l.unshift(\"Warning: \"+r),Function.prototype.apply.call(console[e],console,l)}}var Oe=!1,Se=!1,Ie=!1,Ae=!1,Fe=!1,Z;Z=Symbol.for(\"react.module.reference\");function Ue(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===_||e===G||Fe||e===y||e===A||e===F||Ae||e===Ne||Oe||Se||Ie||typeof e==\"object\"&&e!==null&&(e.$$typeof===U||e.$$typeof===N||e.$$typeof===X||e.$$typeof===K||e.$$typeof===k||e.$$typeof===Z||e.getModuleId!==void 0))}function Ye(e,r,t){var n=e.displayName;if(n)return n;var s=r.displayName||r.name||\"\";return s!==\"\"?t+\"(\"+s+\")\":t}function Q(e){return e.displayName||\"Context\"}function g(e){if(e==null)return null;if(typeof e.tag==\"number\"&&m(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case _:return\"Fragment\";case b:return\"Portal\";case G:return\"Profiler\";case y:return\"StrictMode\";case A:return\"Suspense\";case F:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case K:var r=e;return Q(r)+\".Consumer\";case X:var t=e;return Q(t._context)+\".Provider\";case k:return Ye(e,e.render,\"ForwardRef\");case N:var n=e.displayName||null;return n!==null?n:g(e.type)||\"Memo\";case U:{var s=e,l=s._payload,i=s._init;try{return g(i(l))}catch{return null}}}return null}var w=Object.assign,R=0,ee,re,te,ne,ae,oe,ie;function se(){}se.__reactDisabledLog=!0;function Me(){{if(R===0){ee=console.log,re=console.info,te=console.warn,ne=console.error,ae=console.group,oe=console.groupCollapsed,ie=console.groupEnd;var e={configurable:!0,enumerable:!0,value:se,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}R++}}function We(){{if(R--,R===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:w({},e,{value:ee}),info:w({},e,{value:re}),warn:w({},e,{value:te}),error:w({},e,{value:ne}),group:w({},e,{value:ae}),groupCollapsed:w({},e,{value:oe}),groupEnd:w({},e,{value:ie})})}R<0&&m(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var Y=x.ReactCurrentDispatcher,M;function P(e,r,t){{if(M===void 0)try{throw Error()}catch(s){var n=s.stack.trim().match(/\\n( *(at )?)/);M=n&&n[1]||\"\"}return`\n`+M+e}}var W=!1,C;{var $e=typeof WeakMap==\"function\"?WeakMap:Map;C=new $e}function le(e,r){if(!e||W)return\"\";{var t=C.get(e);if(t!==void 0)return t}var n;W=!0;var s=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var l;l=Y.current,Y.current=null,Me();try{if(r){var i=function(){throw Error()};if(Object.defineProperty(i.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(i,[])}catch(v){n=v}Reflect.construct(e,[],i)}else{try{i.call()}catch(v){n=v}e.call(i.prototype)}}else{try{throw Error()}catch(v){n=v}e()}}catch(v){if(v&&n&&typeof v.stack==\"string\"){for(var o=v.stack.split(`\n`),p=n.stack.split(`\n`),f=o.length-1,d=p.length-1;f>=1&&d>=0&&o[f]!==p[d];)d--;for(;f>=1&&d>=0;f--,d--)if(o[f]!==p[d]){if(f!==1||d!==1)do if(f--,d--,d<0||o[f]!==p[d]){var h=`\n`+o[f].replace(\" at new \",\" at \");return e.displayName&&h.includes(\"<anonymous>\")&&(h=h.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&C.set(e,h),h}while(f>=1&&d>=0);break}}}finally{W=!1,Y.current=l,We(),Error.prepareStackTrace=s}var E=e?e.displayName||e.name:\"\",_e=E?P(E):\"\";return typeof e==\"function\"&&C.set(e,_e),_e}function Ve(e,r,t){return le(e,!1)}function Le(e){var r=e.prototype;return!!(r&&r.isReactComponent)}function D(e,r,t){if(e==null)return\"\";if(typeof e==\"function\")return le(e,Le(e));if(typeof e==\"string\")return P(e);switch(e){case A:return P(\"Suspense\");case F:return P(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case k:return Ve(e.render);case N:return D(e.type,r,t);case U:{var n=e,s=n._payload,l=n._init;try{return D(l(s),r,t)}catch{}}}return\"\"}var O=Object.prototype.hasOwnProperty,ue={},ce=x.ReactDebugCurrentFrame;function S(e){if(e){var r=e._owner,t=D(e.type,e._source,r?r.type:null);ce.setExtraStackFrame(t)}else ce.setExtraStackFrame(null)}function Be(e,r,t,n,s){{var l=Function.call.bind(O);for(var i in e)if(l(e,i)){var o=void 0;try{if(typeof e[i]!=\"function\"){var p=Error((n||\"React class\")+\": \"+t+\" type `\"+i+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[i]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw p.name=\"Invariant Violation\",p}o=e[i](r,i,n,t,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(f){o=f}o&&!(o instanceof Error)&&(S(s),m(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",n||\"React class\",t,i,typeof o),S(null)),o instanceof Error&&!(o.message in ue)&&(ue[o.message]=!0,S(s),m(\"Failed %s type: %s\",t,o.message),S(null))}}}var ze=Array.isArray;function $(e){return ze(e)}function He(e){{var r=typeof Symbol==\"function\"&&Symbol.toStringTag,t=r&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return t}}function qe(e){try{return fe(e),!1}catch{return!0}}function fe(e){return\"\"+e}function de(e){if(qe(e))return m(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",He(e)),fe(e)}var T=x.ReactCurrentOwner,Ge={key:!0,ref:!0,__self:!0,__source:!0},me,pe,V;V={};function Xe(e){if(O.call(e,\"ref\")){var r=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(r&&r.isReactWarning)return!1}return e.ref!==void 0}function Ke(e){if(O.call(e,\"key\")){var r=Object.getOwnPropertyDescriptor(e,\"key\").get;if(r&&r.isReactWarning)return!1}return e.key!==void 0}function Je(e,r){if(typeof e.ref==\"string\"&&T.current&&r&&T.current.stateNode!==r){var t=g(T.current.type);V[t]||(m('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',g(T.current.type),e.ref),V[t]=!0)}}function Ze(e,r){{var t=function(){me||(me=!0,m(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};t.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:t,configurable:!0})}}function Qe(e,r){{var t=function(){pe||(pe=!0,m(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};t.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:t,configurable:!0})}}var er=function(e,r,t,n,s,l,i){var o={$$typeof:a,type:e,key:r,ref:t,props:i,_owner:l};return o._store={},Object.defineProperty(o._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(o,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:n}),Object.defineProperty(o,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:s}),Object.freeze&&(Object.freeze(o.props),Object.freeze(o)),o};function rr(e,r,t,n,s){{var l,i={},o=null,p=null;t!==void 0&&(de(t),o=\"\"+t),Ke(r)&&(de(r.key),o=\"\"+r.key),Xe(r)&&(p=r.ref,Je(r,s));for(l in r)O.call(r,l)&&!Ge.hasOwnProperty(l)&&(i[l]=r[l]);if(e&&e.defaultProps){var f=e.defaultProps;for(l in f)i[l]===void 0&&(i[l]=f[l])}if(o||p){var d=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;o&&Ze(i,d),p&&Qe(i,d)}return er(e,o,p,s,n,T.current,i)}}var L=x.ReactCurrentOwner,he=x.ReactDebugCurrentFrame;function j(e){if(e){var r=e._owner,t=D(e.type,e._source,r?r.type:null);he.setExtraStackFrame(t)}else he.setExtraStackFrame(null)}var B;B=!1;function z(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===a}function be(){{if(L.current){var e=g(L.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function tr(e){{if(e!==void 0){var r=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),t=e.lineNumber;return`\n\nCheck your code at `+r+\":\"+t+\".\"}return\"\"}}var ge={};function nr(e){{var r=be();if(!r){var t=typeof e==\"string\"?e:e.displayName||e.name;t&&(r=`\n\nCheck the top-level render call using <`+t+\">.\")}return r}}function ve(e,r){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var t=nr(r);if(ge[t])return;ge[t]=!0;var n=\"\";e&&e._owner&&e._owner!==L.current&&(n=\" It was passed a child from \"+g(e._owner.type)+\".\"),j(e),m('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',t,n),j(null)}}function ye(e,r){{if(typeof e!=\"object\")return;if($(e))for(var t=0;t<e.length;t++){var n=e[t];z(n)&&ve(n,r)}else if(z(e))e._store&&(e._store.validated=!0);else if(e){var s=Ce(e);if(typeof s==\"function\"&&s!==e.entries)for(var l=s.call(e),i;!(i=l.next()).done;)z(i.value)&&ve(i.value,r)}}}function ar(e){{var r=e.type;if(r==null||typeof r==\"string\")return;var t;if(typeof r==\"function\")t=r.propTypes;else if(typeof r==\"object\"&&(r.$$typeof===k||r.$$typeof===N))t=r.propTypes;else return;if(t){var n=g(r);Be(t,e.props,\"prop\",n,e)}else if(r.PropTypes!==void 0&&!B){B=!0;var s=g(r);m(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",s||\"Unknown\")}typeof r.getDefaultProps==\"function\"&&!r.getDefaultProps.isReactClassApproved&&m(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function or(e){{for(var r=Object.keys(e.props),t=0;t<r.length;t++){var n=r[t];if(n!==\"children\"&&n!==\"key\"){j(e),m(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",n),j(null);break}}e.ref!==null&&(j(e),m(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),j(null))}}function ir(e,r,t,n,s,l){{var i=Ue(e);if(!i){var o=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(o+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var p=tr(s);p?o+=p:o+=be();var f;e===null?f=\"null\":$(e)?f=\"array\":e!==void 0&&e.$$typeof===a?(f=\"<\"+(g(e.type)||\"Unknown\")+\" />\",o=\" Did you accidentally export a JSX literal instead of a component?\"):f=typeof e,m(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",f,o)}var d=rr(e,r,t,s,l);if(d==null)return d;if(i){var h=r.children;if(h!==void 0)if(n)if($(h)){for(var E=0;E<h.length;E++)ye(h[E],e);Object.freeze&&Object.freeze(h)}else m(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else ye(h,e)}return e===_?or(d):ar(d),d}}var sr=ir;q.Fragment=_,q.jsxDEV=sr})()});var Te=H((jr,Re)=>{\"use strict\";Re.exports=Ee()});var yr={};mr(yr,{default:()=>vr,frontmatter:()=>br});var c=pr(Te()),br={slug:\"/how_to_shed_the_project_manager_hat\",title:\"How To Shed The Project Manager Hat\",date:\"2023-02-10T13:06:54.222Z\",tags:[],summary:\"\",draft:!0};function ke(u){let a=Object.assign({p:\"p\",img:\"img\",ol:\"ol\",li:\"li\"},u.components);return(0,c.jsxDEV)(c.Fragment,{children:[(0,c.jsxDEV)(a.p,{children:(0,c.jsxDEV)(a.img,{alt:\"\",src:\"https://images.unsplash.com/photo-1474666488182-66ec723476c6?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=Mnw0MDkwMjh8MHwxfHNlYXJjaHw1fHxIYXRzfGVufDB8fHx8MTY3NjA1MzIxNA&ixlib=rb-4.0.3&q=80&w=1080\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:9,columnNumber:1},this)},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:9,columnNumber:1},this),(0,c.jsxDEV)(a.p,{children:\"I once worked on a project with a 10-year completion estimate. In software. 10 years. As you can imagine, this project was at a large company with many legacy approaches. And as you can imagine, executing a 10-year project requires a lot of project management. In fact, the majority of the project was not product or engineering work but project management work.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:11,columnNumber:1},this),(0,c.jsxDEV)(a.p,{children:\"I didn't stick around long enough to see that project come close to completion, but I think even with smaller-scale projects, legacy processes like these creep up in older organizations and even in some startups. If you come from an organization like this or are trying to transition into a true product management role at most modern organizations, you'll need to find a way to throw away the project management hat and focus on product management instead.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:13,columnNumber:1},this),(0,c.jsxDEV)(a.p,{children:\"First, let's define what project management is. Project management is a reporting and accountability function. Project managers are tasked with ensuring a project stays on track. They do this with Gantt charts and PowerPoints. They do this with spreadsheets and Slack messages. Project managers generally do not do the work. Instead, they bring people together to help facilitate the completion of the work. They force communication when communication is lacking. They push process where chaos might reign supreme.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:15,columnNumber:1},this),(0,c.jsxDEV)(a.p,{children:\"Project management is an important function in every company, even startups. However, in a product-led, fast-moving startup or organization, project management cannot be conflated with product management. Project management is everyone's job in these companies, while product management is the job of people who have a completely different skillsets focused on strategy, collaboration, and execution. I don't want to minimize the role of project managers, but I do think they tend not to be the right role for fast-moving software companies.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:17,columnNumber:1},this),(0,c.jsxDEV)(a.p,{children:\"What exactly is product management, then? Product management is a function that takes in research and critical thinking and outputs products and features. Product managers are not there to move Jira tickets around. If you subscribe to the idea that project management is a team effort, then anyone on the team can move these tickets and help create transparency. Product managers are on the team to help do two main things:\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:19,columnNumber:1},this),(0,c.jsxDEV)(a.ol,{children:[(0,c.jsxDEV)(a.li,{children:(0,c.jsxDEV)(a.p,{children:\"Distill the vision of the founders/CEO into products and features that can be implemented for today's customers.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:21,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:21,columnNumber:1},this),(0,c.jsxDEV)(a.li,{children:(0,c.jsxDEV)(a.p,{children:\"Speak with customers directly and research the market to formulate product strategies that drive the company's mission forward.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:23,columnNumber:5},this)},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:23,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:21,columnNumber:1},this),(0,c.jsxDEV)(a.p,{children:`Hopefully, the delineation of roles is clear. Now, we can get into how and why you might need to shed the project manager hat as you transition into a product manager role. Many companies have roles with \"product\" in the title. These roles are not created. For example, the role of a product owner is one that confused me early in my career. I thought that's what I wanted. And for many people, it's exactly what they want. But a product owner is not a product manager. A product owner is similar to a scrum master or a project manager. Their job is to coordinate tasks. If your company has team collaboration and ownership of this process, you don't need a product owner. But you do need product managers.`},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:26,columnNumber:1},this),(0,c.jsxDEV)(a.p,{children:\"So, it's a natural career progression opportunity to move from product owner or project manager to product manager. But the actions you'll take on the job are different. The biggest change you'll face when shedding the project manager hat is that of process. Process is everything when you're the one managing a project. If you, alone, have to report and coordinate, processes are key. However, in a collaborative product development environment, process is distributed across team members. Opening tickets and moving those tickets through whatever tracking system the engineering team uses is likely going to be the responsibility of the individual contributor (IC). Project planning is going to be more iterative and less process-driven as well. And pivots\\u2026oh, there will be pivots.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:28,columnNumber:1},this),(0,c.jsxDEV)(a.p,{children:\"The last point is, perhaps, the hardest part of the project manager hat to shed. When managing projects, future visibility is important. When working on a fast-moving product team, long-term visibility does not exist. It's like driving through dense fog. You can prepare, you can create strategies for piercing the fog, but you also have to be ready to swerve if needed. When you are coming from a process-first background, these types of pivots can be hard.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:30,columnNumber:1},this),(0,c.jsxDEV)(a.p,{children:\"The best way to prepare yourself for the unknown is to commit to current work and hold your future plans loosely. Seems easy, but it's not. As soon as you start planning for the future, it's easy for you mind to cement those details. This is why I tend not to like roadmaps. Roadmaps are concrete and hard to pivot around. Bets are things you can prioritize, though. Ideas are things you can categorize. If something in the market changes and you suddenly have new direction, your ideas live on, but the bets you take related to those ideas change.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:32,columnNumber:1},this),(0,c.jsxDEV)(a.p,{children:`One day, I'll finally get around to writing about my Loosely Held Ideas framework, but the tl;dr is that when you plan for the future in product management, you need to drop the \"plan\". You're not ever planning. You're thinking. When I sit on a beach, staring at the ocean, I'm not making plans. I'm thinking. That's how you should approach the future of your product. By doing this, you'll be much better equipped to handle the transition from project management to product management.`},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:34,columnNumber:1},this),(0,c.jsxDEV)(a.p,{children:\"Project managers, scrum masters, product owners, et al are useful roles in the right context. I'm assuming throughout this article that you are moving into a context where those roles do not make sense. If that's true, it's time for you to hang up your old hat and grab a new one from the rack. Because project management and product management are two different beasts.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:36,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\",lineNumber:1,columnNumber:1},this)}function gr(u={}){let{wrapper:a}=u.components||{};return a?(0,c.jsxDEV)(a,Object.assign({},u,{children:(0,c.jsxDEV)(ke,u,void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\"},this)}),void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-300b4b89-46e6-48d3-908f-0e5f44a4aaba.mdx\"},this):ke(u)}var vr=gr;return hr(yr);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "blog/how-to-shed-the-project-manager_hat.mdx",
  "_raw": {
    "sourceFilePath": "blog/how-to-shed-the-project-manager_hat.mdx",
    "sourceFileName": "how-to-shed-the-project-manager_hat.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/how-to-shed-the-project-manager_hat"
  },
  "type": "Blog",
  "readingTime": {
    "text": "5 min read",
    "minutes": 4.92,
    "time": 295200,
    "words": 984
  },
  "slug": "how-to-shed-the-project-manager_hat",
  "path": "blog/how-to-shed-the-project-manager_hat",
  "filePath": "blog/how-to-shed-the-project-manager_hat.mdx",
  "toc": [],
  "structuredData": {
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    "headline": "How To Shed The Project Manager Hat",
    "datePublished": "2023-02-10T13:06:54.222Z",
    "dateModified": "2023-02-10T13:06:54.222Z",
    "description": "",
    "image": "/static/images/twitter-card.png",
    "url": "https://polluterofminds.com/blog/how-to-shed-the-project-manager_hat"
  }
}