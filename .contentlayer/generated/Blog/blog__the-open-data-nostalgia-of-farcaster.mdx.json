{
  "title": "The Open Data Nostalgia of Farcaster",
  "date": "2022-11-05T14:07:53.000Z",
  "tags": [
    "personal",
    "dev"
  ],
  "draft": false,
  "summary": "",
  "body": {
    "raw": "\nI've been meaning to dive into the [Farcaster](https://farcaster.xyz) protocol for a while now. This past week, I finally took the plunge. While I waited for my invite-only access to generate a username and access the \"official\" iOS client, I created some Node.js scripts to play around with the protocol. I read the documentation on the [protocol](https://github.com/farcasterxyz/protocol) and the [hubs](https://github.com/farcasterxyz/hub). And I played with apps already built atop the Farcaster protocol—apps like [Discove](https://discove.xyz) which I found really inspiring.\n\nAs I explored the protocol, nostalgia began creeping back into my mind. I've been working in \"blockchain\" since 2015, but I didn't start building in the space until 2017. Back then, I started work on an app called Graphite—an open, but encrypted alternative to Google Docs. It was built atop promises made by [Blockstack](https://www.stacks.co/) (now called Hiro). Blockstack offered data portability, name registration, open networks, and driving competition down to client-level UX instead of data walls. I was especially taken by concept of [Gaia Hubs](https://docs.stacks.co/docs/gaia/) on Blockstack. These hubs were portable storage locations that could be run by services or by individuals. They were designed to build open networks as an alternative to the way apps had been built throughout the entire cloud-era of creation.  Hubs were controlled by namespaces. Names were registered on the Bitcoin blockchain (and later the Stacks blockchain). \n\nIf this all sounds familiar, it sounded familiar to me too. This is what attracted me to Farcaster. The protocol is laid out in a similar fashion, but it is Ethereum based. Names are registered as NFTs on the Ethereum blockchain. Names, I think, point to hubs? This part is a little fuzzy to me, but in any event, hubs can theoretically be run by anyone. These hubs have peer connections, and the owners of the hubs control the method in which data is persisted beyond disk storage. \n\nThe practical applications of an open data model like this are already exhibited in the proof of concept apps built atop Farcaster now. While Farcaster is still on Ethereum's testnet and not \"production ready\", people are building. And that's a great sign. \n\nHowever, I still have the scars from the failed promises of the Blockstack ecosystem. Almost no one ran Gaia Hubs. This meant that all data was entirely controlled by Blockstack. On its face, I actually don't mind this. The data was available openly, and anyone could index it or run their own hub. The real problem was scale. Blockstack never reached critical mass. Devs are still using the platform (Hiro), but it still has not reached a scale to which the open data model matters. This is where I'm encouraged by Farcaster's thoughtful approach. \n\nDecentralization maximalists might scoff at the idea of a manually curated registry of names and access, but this is exactly what Farcaster needs to do in order to reach critical mass. Couple the curation mechanism with a genuinely useful and pleasant application, and adoption should follow. When the app and therefore the protocol have reached critical mass (1 million users according to [Dan Romero](https://twitter.com/dwr)), the benefits of the open data model become significantly stronger. Strong enough to power businesses built atop the protocol. \n\nI'm cautiously optimistic about the future of Farcaster because it puts product first. It puts experience first. And it is driven by the possibilities of new models being built atop it. \n\nBut then again, I had these feelings before and I was let down. \n",
    "code": "var Component=(()=>{var d=Object.create;var n=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),w=(t,e)=>{for(var o in e)n(t,o,{get:e[o],enumerable:!0})},r=(t,e,o,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of u(e))!b.call(t,i)&&i!==o&&n(t,i,{get:()=>e[i],enumerable:!(s=p(e,i))||s.enumerable});return t};var y=(t,e,o)=>(o=t!=null?d(m(t)):{},r(e||!t||!t.__esModule?n(o,\"default\",{value:t,enumerable:!0}):o,t)),g=t=>r(n({},\"__esModule\",{value:!0}),t);var l=f((F,c)=>{c.exports=_jsx_runtime});var x={};w(x,{default:()=>I,frontmatter:()=>k});var a=y(l()),k={title:\"The Open Data Nostalgia of Farcaster\",date:new Date(1667657273e3),tags:[\"personal\",\"dev\"],summary:\"\",draft:!1};function h(t){let e=Object.assign({p:\"p\",a:\"a\"},t.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.p,{children:[\"I've been meaning to dive into the \",(0,a.jsx)(e.a,{href:\"https://farcaster.xyz\",children:\"Farcaster\"}),' protocol for a while now. This past week, I finally took the plunge. While I waited for my invite-only access to generate a username and access the \"official\" iOS client, I created some Node.js scripts to play around with the protocol. I read the documentation on the ',(0,a.jsx)(e.a,{href:\"https://github.com/farcasterxyz/protocol\",children:\"protocol\"}),\" and the \",(0,a.jsx)(e.a,{href:\"https://github.com/farcasterxyz/hub\",children:\"hubs\"}),\". And I played with apps already built atop the Farcaster protocol\\u2014apps like \",(0,a.jsx)(e.a,{href:\"https://discove.xyz\",children:\"Discove\"}),\" which I found really inspiring.\"]}),(0,a.jsxs)(e.p,{children:[`As I explored the protocol, nostalgia began creeping back into my mind. I've been working in \"blockchain\" since 2015, but I didn't start building in the space until 2017. Back then, I started work on an app called Graphite\\u2014an open, but encrypted alternative to Google Docs. It was built atop promises made by `,(0,a.jsx)(e.a,{href:\"https://www.stacks.co/\",children:\"Blockstack\"}),\" (now called Hiro). Blockstack offered data portability, name registration, open networks, and driving competition down to client-level UX instead of data walls. I was especially taken by concept of \",(0,a.jsx)(e.a,{href:\"https://docs.stacks.co/docs/gaia/\",children:\"Gaia Hubs\"}),\" on Blockstack. These hubs were portable storage locations that could be run by services or by individuals. They were designed to build open networks as an alternative to the way apps had been built throughout the entire cloud-era of creation. \\xA0Hubs were controlled by namespaces. Names were registered on the Bitcoin blockchain (and later the Stacks blockchain).\"]}),(0,a.jsx)(e.p,{children:\"If this all sounds familiar, it sounded familiar to me too. This is what attracted me to Farcaster. The protocol is laid out in a similar fashion, but it is Ethereum based. Names are registered as NFTs on the Ethereum blockchain. Names, I think, point to hubs? This part is a little fuzzy to me, but in any event, hubs can theoretically be run by anyone. These hubs have peer connections, and the owners of the hubs control the method in which data is persisted beyond disk storage.\"}),(0,a.jsx)(e.p,{children:`The practical applications of an open data model like this are already exhibited in the proof of concept apps built atop Farcaster now. While Farcaster is still on Ethereum's testnet and not \"production ready\", people are building. And that's a great sign.`}),(0,a.jsx)(e.p,{children:\"However, I still have the scars from the failed promises of the Blockstack ecosystem. Almost no one ran Gaia Hubs. This meant that all data was entirely controlled by Blockstack. On its face, I actually don't mind this. The data was available openly, and anyone could index it or run their own hub. The real problem was scale. Blockstack never reached critical mass. Devs are still using the platform (Hiro), but it still has not reached a scale to which the open data model matters. This is where I'm encouraged by Farcaster's thoughtful approach.\"}),(0,a.jsxs)(e.p,{children:[\"Decentralization maximalists might scoff at the idea of a manually curated registry of names and access, but this is exactly what Farcaster needs to do in order to reach critical mass. Couple the curation mechanism with a genuinely useful and pleasant application, and adoption should follow. When the app and therefore the protocol have reached critical mass (1 million users according to \",(0,a.jsx)(e.a,{href:\"https://twitter.com/dwr\",children:\"Dan Romero\"}),\"), the benefits of the open data model become significantly stronger. Strong enough to power businesses built atop the protocol.\"]}),(0,a.jsx)(e.p,{children:\"I'm cautiously optimistic about the future of Farcaster because it puts product first. It puts experience first. And it is driven by the possibilities of new models being built atop it.\"}),(0,a.jsx)(e.p,{children:\"But then again, I had these feelings before and I was let down.\"})]})}function v(t={}){let{wrapper:e}=t.components||{};return e?(0,a.jsx)(e,Object.assign({},t,{children:(0,a.jsx)(h,t)})):h(t)}var I=v;return g(x);})();\n;return Component;"
  },
  "_id": "blog/the-open-data-nostalgia-of-farcaster.mdx",
  "_raw": {
    "sourceFilePath": "blog/the-open-data-nostalgia-of-farcaster.mdx",
    "sourceFileName": "the-open-data-nostalgia-of-farcaster.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/the-open-data-nostalgia-of-farcaster"
  },
  "type": "Blog",
  "readingTime": {
    "text": "3 min read",
    "minutes": 2.85,
    "time": 171000,
    "words": 570
  },
  "slug": "the-open-data-nostalgia-of-farcaster",
  "path": "blog/the-open-data-nostalgia-of-farcaster",
  "filePath": "blog/the-open-data-nostalgia-of-farcaster.mdx",
  "toc": [],
  "structuredData": {
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    "headline": "The Open Data Nostalgia of Farcaster",
    "datePublished": "2022-11-05T14:07:53.000Z",
    "dateModified": "2022-11-05T14:07:53.000Z",
    "description": "",
    "image": "/static/images/twitter-card.png",
    "url": "https://polluterofminds.com/blog/the-open-data-nostalgia-of-farcaster"
  }
}