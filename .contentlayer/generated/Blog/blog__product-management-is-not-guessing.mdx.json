{
  "title": "Product Management Is Not Guessing",
  "date": "2023-03-01T13:29:23.758Z",
  "tags": [],
  "draft": true,
  "summary": "",
  "body": {
    "raw": "Jump off the cliff and build the plane on the way down. You may have heard this phrase or something similar. The sentiment behind it makes sense. You want to figure things out as you go. You want to move fast. But you have to do all this while backing it with qualitative or quantitative data (or both if you're lucky). Your plane will fall right out of the sky if you base your decisions entirely on assumptions.\n\nWhen I was starting my product management journey, I wasn't even a product manager. I was working at a small startup nine years ago doing customer support and account management. We lumped it together because the software was almost entirely self-serve with some product demos to help close inbound sales leads. Through this experience, I developed a deep knowledge of the product and our customers. This led to me being pulled into conversations with engineering as they were building or refining features.\n\n\"Should we add this button?\"\n\n\"Which layout do you think is better?\"\n\n\"This feature or that feature?\"\n\nThey trusted me, and that felt good. However, those questions were based on the belief that because of my product knowledge and customer contact, I could easily answer them. If I did (and sometimes I did), I would be guessing. I would be extrapolating my existing conversations and applying that knowledge to engineering decisions.\n\nWait, that actually sounds a little like product management, doesn't it?\n\nIt does, and it is. The difference, though, is in the mechanism for testing assumptions. If you make a decision based on an assumption, you're making a bet. But you have to test that bet. You have to be willing to validate that bet through customer research. When people ask you for decisions on the spot, they often expect you to be the expert and the voice of the customer. It's a good position to be in, but it can also be a trap.\n\nIf you find yourself going with your gut too often, you might be guessing. And product management is not guessing. Product management is research. It's empathy and analysis. You will develop some gut feels, and you should leverage those for quick wins. But if you are operating entirely from your past experience, you can miss the changing tastes of the market. You can miss signals that would help you build better products and features.\n",
    "code": "var Component=(()=>{var ur=Object.create;var I=Object.defineProperty;var lr=Object.getOwnPropertyDescriptor;var fr=Object.getOwnPropertyNames;var cr=Object.getPrototypeOf,dr=Object.prototype.hasOwnProperty;var G=(l,i)=>()=>(i||l((i={exports:{}}).exports,i),i.exports),mr=(l,i)=>{for(var h in i)I(l,h,{get:i[h],enumerable:!0})},Ee=(l,i,h,_)=>{if(i&&typeof i==\"object\"||typeof i==\"function\")for(let y of fr(i))!dr.call(l,y)&&y!==h&&I(l,y,{get:()=>i[y],enumerable:!(_=lr(i,y))||_.enumerable});return l};var vr=(l,i,h)=>(h=l!=null?ur(cr(l)):{},Ee(i||!l||!l.__esModule?I(h,\"default\",{value:l,enumerable:!0}):h,l)),pr=l=>Ee(I({},\"__esModule\",{value:!0}),l);var Re=G((Er,we)=>{we.exports=React});var xe=G(z=>{\"use strict\";(function(){\"use strict\";var l=Re(),i=Symbol.for(\"react.element\"),h=Symbol.for(\"react.portal\"),_=Symbol.for(\"react.fragment\"),y=Symbol.for(\"react.strict_mode\"),X=Symbol.for(\"react.profiler\"),H=Symbol.for(\"react.provider\"),K=Symbol.for(\"react.context\"),C=Symbol.for(\"react.forward_ref\"),F=Symbol.for(\"react.suspense\"),A=Symbol.for(\"react.suspense_list\"),O=Symbol.for(\"react.memo\"),Y=Symbol.for(\"react.lazy\"),Oe=Symbol.for(\"react.offscreen\"),J=Symbol.iterator,Pe=\"@@iterator\";function Se(e){if(e===null||typeof e!=\"object\")return null;var r=J&&e[J]||e[Pe];return typeof r==\"function\"?r:null}var w=l.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function d(e){{for(var r=arguments.length,t=new Array(r>1?r-1:0),n=1;n<r;n++)t[n-1]=arguments[n];ke(\"error\",e,t)}}function ke(e,r,t){{var n=w.ReactDebugCurrentFrame,s=n.getStackAddendum();s!==\"\"&&(r+=\"%s\",t=t.concat([s]));var u=t.map(function(o){return String(o)});u.unshift(\"Warning: \"+r),Function.prototype.apply.call(console[e],console,u)}}var De=!1,Ne=!1,Ie=!1,Fe=!1,Ae=!1,Z;Z=Symbol.for(\"react.module.reference\");function Ye(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===_||e===X||Ae||e===y||e===F||e===A||Fe||e===Oe||De||Ne||Ie||typeof e==\"object\"&&e!==null&&(e.$$typeof===Y||e.$$typeof===O||e.$$typeof===H||e.$$typeof===K||e.$$typeof===C||e.$$typeof===Z||e.getModuleId!==void 0))}function Ue(e,r,t){var n=e.displayName;if(n)return n;var s=r.displayName||r.name||\"\";return s!==\"\"?t+\"(\"+s+\")\":t}function Q(e){return e.displayName||\"Context\"}function b(e){if(e==null)return null;if(typeof e.tag==\"number\"&&d(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case _:return\"Fragment\";case h:return\"Portal\";case X:return\"Profiler\";case y:return\"StrictMode\";case F:return\"Suspense\";case A:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case K:var r=e;return Q(r)+\".Consumer\";case H:var t=e;return Q(t._context)+\".Provider\";case C:return Ue(e,e.render,\"ForwardRef\");case O:var n=e.displayName||null;return n!==null?n:b(e.type)||\"Memo\";case Y:{var s=e,u=s._payload,o=s._init;try{return b(o(u))}catch{return null}}}return null}var E=Object.assign,T=0,ee,re,te,ne,ae,oe,ie;function se(){}se.__reactDisabledLog=!0;function We(){{if(T===0){ee=console.log,re=console.info,te=console.warn,ne=console.error,ae=console.group,oe=console.groupCollapsed,ie=console.groupEnd;var e={configurable:!0,enumerable:!0,value:se,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}T++}}function $e(){{if(T--,T===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:E({},e,{value:ee}),info:E({},e,{value:re}),warn:E({},e,{value:te}),error:E({},e,{value:ne}),group:E({},e,{value:ae}),groupCollapsed:E({},e,{value:oe}),groupEnd:E({},e,{value:ie})})}T<0&&d(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var U=w.ReactCurrentDispatcher,W;function P(e,r,t){{if(W===void 0)try{throw Error()}catch(s){var n=s.stack.trim().match(/\\n( *(at )?)/);W=n&&n[1]||\"\"}return`\n`+W+e}}var $=!1,S;{var Me=typeof WeakMap==\"function\"?WeakMap:Map;S=new Me}function ue(e,r){if(!e||$)return\"\";{var t=S.get(e);if(t!==void 0)return t}var n;$=!0;var s=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var u;u=U.current,U.current=null,We();try{if(r){var o=function(){throw Error()};if(Object.defineProperty(o.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(o,[])}catch(g){n=g}Reflect.construct(e,[],o)}else{try{o.call()}catch(g){n=g}e.call(o.prototype)}}else{try{throw Error()}catch(g){n=g}e()}}catch(g){if(g&&n&&typeof g.stack==\"string\"){for(var a=g.stack.split(`\n`),m=n.stack.split(`\n`),f=a.length-1,c=m.length-1;f>=1&&c>=0&&a[f]!==m[c];)c--;for(;f>=1&&c>=0;f--,c--)if(a[f]!==m[c]){if(f!==1||c!==1)do if(f--,c--,c<0||a[f]!==m[c]){var p=`\n`+a[f].replace(\" at new \",\" at \");return e.displayName&&p.includes(\"<anonymous>\")&&(p=p.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&S.set(e,p),p}while(f>=1&&c>=0);break}}}finally{$=!1,U.current=u,$e(),Error.prepareStackTrace=s}var x=e?e.displayName||e.name:\"\",_e=x?P(x):\"\";return typeof e==\"function\"&&S.set(e,_e),_e}function Ve(e,r,t){return ue(e,!1)}function Le(e){var r=e.prototype;return!!(r&&r.isReactComponent)}function k(e,r,t){if(e==null)return\"\";if(typeof e==\"function\")return ue(e,Le(e));if(typeof e==\"string\")return P(e);switch(e){case F:return P(\"Suspense\");case A:return P(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case C:return Ve(e.render);case O:return k(e.type,r,t);case Y:{var n=e,s=n._payload,u=n._init;try{return k(u(s),r,t)}catch{}}}return\"\"}var D=Object.prototype.hasOwnProperty,le={},fe=w.ReactDebugCurrentFrame;function N(e){if(e){var r=e._owner,t=k(e.type,e._source,r?r.type:null);fe.setExtraStackFrame(t)}else fe.setExtraStackFrame(null)}function Be(e,r,t,n,s){{var u=Function.call.bind(D);for(var o in e)if(u(e,o)){var a=void 0;try{if(typeof e[o]!=\"function\"){var m=Error((n||\"React class\")+\": \"+t+\" type `\"+o+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[o]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw m.name=\"Invariant Violation\",m}a=e[o](r,o,n,t,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(f){a=f}a&&!(a instanceof Error)&&(N(s),d(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",n||\"React class\",t,o,typeof a),N(null)),a instanceof Error&&!(a.message in le)&&(le[a.message]=!0,N(s),d(\"Failed %s type: %s\",t,a.message),N(null))}}}var qe=Array.isArray;function M(e){return qe(e)}function Ge(e){{var r=typeof Symbol==\"function\"&&Symbol.toStringTag,t=r&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return t}}function ze(e){try{return ce(e),!1}catch{return!0}}function ce(e){return\"\"+e}function de(e){if(ze(e))return d(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",Ge(e)),ce(e)}var j=w.ReactCurrentOwner,Xe={key:!0,ref:!0,__self:!0,__source:!0},me,ve,V;V={};function He(e){if(D.call(e,\"ref\")){var r=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(r&&r.isReactWarning)return!1}return e.ref!==void 0}function Ke(e){if(D.call(e,\"key\")){var r=Object.getOwnPropertyDescriptor(e,\"key\").get;if(r&&r.isReactWarning)return!1}return e.key!==void 0}function Je(e,r){if(typeof e.ref==\"string\"&&j.current&&r&&j.current.stateNode!==r){var t=b(j.current.type);V[t]||(d('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',b(j.current.type),e.ref),V[t]=!0)}}function Ze(e,r){{var t=function(){me||(me=!0,d(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};t.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:t,configurable:!0})}}function Qe(e,r){{var t=function(){ve||(ve=!0,d(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};t.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:t,configurable:!0})}}var er=function(e,r,t,n,s,u,o){var a={$$typeof:i,type:e,key:r,ref:t,props:o,_owner:u};return a._store={},Object.defineProperty(a._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(a,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:n}),Object.defineProperty(a,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:s}),Object.freeze&&(Object.freeze(a.props),Object.freeze(a)),a};function rr(e,r,t,n,s){{var u,o={},a=null,m=null;t!==void 0&&(de(t),a=\"\"+t),Ke(r)&&(de(r.key),a=\"\"+r.key),He(r)&&(m=r.ref,Je(r,s));for(u in r)D.call(r,u)&&!Xe.hasOwnProperty(u)&&(o[u]=r[u]);if(e&&e.defaultProps){var f=e.defaultProps;for(u in f)o[u]===void 0&&(o[u]=f[u])}if(a||m){var c=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;a&&Ze(o,c),m&&Qe(o,c)}return er(e,a,m,s,n,j.current,o)}}var L=w.ReactCurrentOwner,pe=w.ReactDebugCurrentFrame;function R(e){if(e){var r=e._owner,t=k(e.type,e._source,r?r.type:null);pe.setExtraStackFrame(t)}else pe.setExtraStackFrame(null)}var B;B=!1;function q(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===i}function he(){{if(L.current){var e=b(L.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function tr(e){{if(e!==void 0){var r=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),t=e.lineNumber;return`\n\nCheck your code at `+r+\":\"+t+\".\"}return\"\"}}var be={};function nr(e){{var r=he();if(!r){var t=typeof e==\"string\"?e:e.displayName||e.name;t&&(r=`\n\nCheck the top-level render call using <`+t+\">.\")}return r}}function ge(e,r){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var t=nr(r);if(be[t])return;be[t]=!0;var n=\"\";e&&e._owner&&e._owner!==L.current&&(n=\" It was passed a child from \"+b(e._owner.type)+\".\"),R(e),d('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',t,n),R(null)}}function ye(e,r){{if(typeof e!=\"object\")return;if(M(e))for(var t=0;t<e.length;t++){var n=e[t];q(n)&&ge(n,r)}else if(q(e))e._store&&(e._store.validated=!0);else if(e){var s=Se(e);if(typeof s==\"function\"&&s!==e.entries)for(var u=s.call(e),o;!(o=u.next()).done;)q(o.value)&&ge(o.value,r)}}}function ar(e){{var r=e.type;if(r==null||typeof r==\"string\")return;var t;if(typeof r==\"function\")t=r.propTypes;else if(typeof r==\"object\"&&(r.$$typeof===C||r.$$typeof===O))t=r.propTypes;else return;if(t){var n=b(r);Be(t,e.props,\"prop\",n,e)}else if(r.PropTypes!==void 0&&!B){B=!0;var s=b(r);d(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",s||\"Unknown\")}typeof r.getDefaultProps==\"function\"&&!r.getDefaultProps.isReactClassApproved&&d(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function or(e){{for(var r=Object.keys(e.props),t=0;t<r.length;t++){var n=r[t];if(n!==\"children\"&&n!==\"key\"){R(e),d(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",n),R(null);break}}e.ref!==null&&(R(e),d(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),R(null))}}function ir(e,r,t,n,s,u){{var o=Ye(e);if(!o){var a=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(a+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var m=tr(s);m?a+=m:a+=he();var f;e===null?f=\"null\":M(e)?f=\"array\":e!==void 0&&e.$$typeof===i?(f=\"<\"+(b(e.type)||\"Unknown\")+\" />\",a=\" Did you accidentally export a JSX literal instead of a component?\"):f=typeof e,d(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",f,a)}var c=rr(e,r,t,s,u);if(c==null)return c;if(o){var p=r.children;if(p!==void 0)if(n)if(M(p)){for(var x=0;x<p.length;x++)ye(p[x],e);Object.freeze&&Object.freeze(p)}else d(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else ye(p,e)}return e===_?or(c):ar(c),c}}var sr=ir;z.Fragment=_,z.jsxDEV=sr})()});var je=G((Rr,Te)=>{\"use strict\";Te.exports=xe()});var yr={};mr(yr,{default:()=>gr,frontmatter:()=>hr});var v=vr(je()),hr={slug:\"/product-management-is-not-guessing\",title:\"Product Management Is Not Guessing\",date:\"2023-03-01T13:29:23.758Z\",tags:[],summary:\"\",draft:!0};function Ce(l){let i=Object.assign({p:\"p\"},l.components);return(0,v.jsxDEV)(v.Fragment,{children:[(0,v.jsxDEV)(i.p,{children:\"Jump off the cliff and build the plane on the way down. You may have heard this phrase or something similar. The sentiment behind it makes sense. You want to figure things out as you go. You want to move fast. But you have to do all this while backing it with qualitative or quantitative data (or both if you're lucky). Your plane will fall right out of the sky if you base your decisions entirely on assumptions.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-9b33997c-a121-4441-98c5-e76f7ae1c820.mdx\",lineNumber:9,columnNumber:1},this),(0,v.jsxDEV)(i.p,{children:\"When I was starting my product management journey, I wasn't even a product manager. I was working at a small startup nine years ago doing customer support and account management. We lumped it together because the software was almost entirely self-serve with some product demos to help close inbound sales leads. Through this experience, I developed a deep knowledge of the product and our customers. This led to me being pulled into conversations with engineering as they were building or refining features.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-9b33997c-a121-4441-98c5-e76f7ae1c820.mdx\",lineNumber:11,columnNumber:1},this),(0,v.jsxDEV)(i.p,{children:'\"Should we add this button?\"'},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-9b33997c-a121-4441-98c5-e76f7ae1c820.mdx\",lineNumber:13,columnNumber:1},this),(0,v.jsxDEV)(i.p,{children:'\"Which layout do you think is better?\"'},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-9b33997c-a121-4441-98c5-e76f7ae1c820.mdx\",lineNumber:15,columnNumber:1},this),(0,v.jsxDEV)(i.p,{children:'\"This feature or that feature?\"'},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-9b33997c-a121-4441-98c5-e76f7ae1c820.mdx\",lineNumber:17,columnNumber:1},this),(0,v.jsxDEV)(i.p,{children:\"They trusted me, and that felt good. However, those questions were based on the belief that because of my product knowledge and customer contact, I could easily answer them. If I did (and sometimes I did), I would be guessing. I would be extrapolating my existing conversations and applying that knowledge to engineering decisions.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-9b33997c-a121-4441-98c5-e76f7ae1c820.mdx\",lineNumber:19,columnNumber:1},this),(0,v.jsxDEV)(i.p,{children:\"Wait, that actually sounds a little like product management, doesn't it?\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-9b33997c-a121-4441-98c5-e76f7ae1c820.mdx\",lineNumber:21,columnNumber:1},this),(0,v.jsxDEV)(i.p,{children:\"It does, and it is. The difference, though, is in the mechanism for testing assumptions. If you make a decision based on an assumption, you're making a bet. But you have to test that bet. You have to be willing to validate that bet through customer research. When people ask you for decisions on the spot, they often expect you to be the expert and the voice of the customer. It's a good position to be in, but it can also be a trap.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-9b33997c-a121-4441-98c5-e76f7ae1c820.mdx\",lineNumber:23,columnNumber:1},this),(0,v.jsxDEV)(i.p,{children:\"If you find yourself going with your gut too often, you might be guessing. And product management is not guessing. Product management is research. It's empathy and analysis. You will develop some gut feels, and you should leverage those for quick wins. But if you are operating entirely from your past experience, you can miss the changing tastes of the market. You can miss signals that would help you build better products and features.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-9b33997c-a121-4441-98c5-e76f7ae1c820.mdx\",lineNumber:25,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-9b33997c-a121-4441-98c5-e76f7ae1c820.mdx\",lineNumber:1,columnNumber:1},this)}function br(l={}){let{wrapper:i}=l.components||{};return i?(0,v.jsxDEV)(i,Object.assign({},l,{children:(0,v.jsxDEV)(Ce,l,void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-9b33997c-a121-4441-98c5-e76f7ae1c820.mdx\"},this)}),void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-9b33997c-a121-4441-98c5-e76f7ae1c820.mdx\"},this):Ce(l)}var gr=br;return pr(yr);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "blog/product-management-is-not-guessing.mdx",
  "_raw": {
    "sourceFilePath": "blog/product-management-is-not-guessing.mdx",
    "sourceFileName": "product-management-is-not-guessing.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/product-management-is-not-guessing"
  },
  "type": "Blog",
  "readingTime": {
    "text": "2 min read",
    "minutes": 2,
    "time": 120000,
    "words": 400
  },
  "slug": "product-management-is-not-guessing",
  "path": "blog/product-management-is-not-guessing",
  "filePath": "blog/product-management-is-not-guessing.mdx",
  "toc": [],
  "structuredData": {
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    "headline": "Product Management Is Not Guessing",
    "datePublished": "2023-03-01T13:29:23.758Z",
    "dateModified": "2023-03-01T13:29:23.758Z",
    "description": "",
    "image": "/static/images/twitter-card.png",
    "url": "https://polluterofminds.com/blog/product-management-is-not-guessing"
  }
}