{
  "title": "Thinking In Public",
  "date": "2022-08-02T14:50:38.000Z",
  "tags": [],
  "draft": false,
  "summary": "",
  "body": {
    "raw": "\n#### Why it’s important for leaders to brainstorm and discuss ideas in a way that allows the rest of the company to interact and gain insights into decisions\n\nRemote work has pushed us to messaging apps. Conversations that used to happen in the hallways of your office happen on Slack and Microsoft Teams and Discord now. However, the serendipitous communication that arose from in-person work is not gone with remote work. It just requires more intentionality.\n\nPart of that intentionality is *thinking in public*.\n\nAt [Pinata](https://pinata.cloud), early on—when the company was just four people—we knew dreaming big was going to be important, but we also knew the best way to dream in color was to share our thought process along the way. It started with a slack channel called `#pinnies-dreamland`.\n![](https://cdn-images-1.medium.com/max/800/1*ivWUrhC7lmwolfpunWuwuA@2x.png)\nThe channel was a start. It was permission to talk openly without fear of the what-ifs creeping in. It was permission to explore the possible and, more important, the potentially *impossible*. But alone, the channel was just an idea factory in isolation. In order to propose ideas with substance, a shared understanding of multiple concentrations was necessary. Where is the company now? Where is the company going? What could change the trajectory? What does the market look like? What are leading indicators? What are lagging indicators? And so much more.\n\nIn the often isolated silo of remote work, it’s hard to keep people on the same page, so constant communication is key. But how do you balance constant communication with the very real possibility that you run into information overload? I think the answer to this is to not balance it. In truth, more information, even if it gets buried, is better than no information. A company that has the opportunity to see the thought process of leaders and contribute to that thought process will have an advantage over one that discusses the future behind closed doors.\n\nSo, if we aren’t solving for information overload, we should at least optimize for information reception, right?\n\nIn a world where messaging apps like Slack become the de facto communication medium, it’s important that people understand where to look for info and how to contribute. I don’t think Pinata has completely solved this, but one of the things we instilled early one—back when we were a company of four—was that every conversation was open to every member of the company. If you read something that you felt applied to the business, you should share it. Give your perspective, comments on others’ perspectives. If you heard from a customer, share the insight. If you saw a market signal, you should share that with the team and explain why it matters.\n\nThis type of communication requires full trust. It requires respect. It requires a complete lack of ego. You have to be comfortable as a CEO or a CTO sharing ideas that even the newest hire might push back against. You also, as the newest hire, must be comfortable offering your opinions and having a back-and-forth conversation with anyone else at the company.\n\nAn all-hands meeting is a good way to convey information top-down. These types of meetings are useful, but they are not a substitute for thinking in public. All-hands meetings are less collaborative than open, asynchronous communication. They are good for distributing important facts but not for healthy discourse on the varied opinions a team might have on the company or market’s current or future state.\n\nA half-formed thought, posted on slack or even shared in an email with others, can often lead to fully formed product decisions later. But that can only happen if you’re willing to share. It can only happen if you’re willing to participate when others share. Messages will get lost. But by at least providing the opportunity for others to share in your thought process, you are creating an organization of horizontal leadership. Ideas don’t form in isolation when you think in public. They form concurrently. They form across a horizon of shared understanding. And the company is better for it.\n\nOptimize for participation, but don’t skip out on thinking in public just because you don’t have the perfect formula for doing so. Share, collaborate, and communicate without fear of being wrong, without consideration of titles and positions in the hierarchy of the organization. Work as the creative people you are, and you will find that the entire organization starts to pull in the same direction much easier.\n",
    "code": "var Component=(()=>{var lt=Object.create;var I=Object.defineProperty;var ut=Object.getOwnPropertyDescriptor;var ft=Object.getOwnPropertyNames;var dt=Object.getPrototypeOf,ct=Object.prototype.hasOwnProperty;var q=(u,a)=>()=>(a||u((a={exports:{}}).exports,a),a.exports),mt=(u,a)=>{for(var b in a)I(u,b,{get:a[b],enumerable:!0})},we=(u,a,b,_)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let y of ft(a))!ct.call(u,y)&&y!==b&&I(u,y,{get:()=>a[y],enumerable:!(_=ut(a,y))||_.enumerable});return u};var ht=(u,a,b)=>(b=u!=null?lt(dt(u)):{},we(a||!u||!u.__esModule?I(b,\"default\",{value:u,enumerable:!0}):b,u)),pt=u=>we(I({},\"__esModule\",{value:!0}),u);var Ee=q((wt,xe)=>{xe.exports=React});var Re=q(G=>{\"use strict\";(function(){\"use strict\";var u=Ee(),a=Symbol.for(\"react.element\"),b=Symbol.for(\"react.portal\"),_=Symbol.for(\"react.fragment\"),y=Symbol.for(\"react.strict_mode\"),X=Symbol.for(\"react.profiler\"),H=Symbol.for(\"react.provider\"),K=Symbol.for(\"react.context\"),k=Symbol.for(\"react.forward_ref\"),A=Symbol.for(\"react.suspense\"),F=Symbol.for(\"react.suspense_list\"),N=Symbol.for(\"react.memo\"),U=Symbol.for(\"react.lazy\"),Ne=Symbol.for(\"react.offscreen\"),J=Symbol.iterator,Ce=\"@@iterator\";function De(e){if(e===null||typeof e!=\"object\")return null;var t=J&&e[J]||e[Ce];return typeof t==\"function\"?t:null}var x=u.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function m(e){{for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];Oe(\"error\",e,r)}}function Oe(e,t,r){{var n=x.ReactDebugCurrentFrame,s=n.getStackAddendum();s!==\"\"&&(t+=\"%s\",r=r.concat([s]));var l=r.map(function(i){return String(i)});l.unshift(\"Warning: \"+t),Function.prototype.apply.call(console[e],console,l)}}var Pe=!1,Se=!1,Ie=!1,Ae=!1,Fe=!1,Z;Z=Symbol.for(\"react.module.reference\");function Ue(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===_||e===X||Fe||e===y||e===A||e===F||Ae||e===Ne||Pe||Se||Ie||typeof e==\"object\"&&e!==null&&(e.$$typeof===U||e.$$typeof===N||e.$$typeof===H||e.$$typeof===K||e.$$typeof===k||e.$$typeof===Z||e.getModuleId!==void 0))}function We(e,t,r){var n=e.displayName;if(n)return n;var s=t.displayName||t.name||\"\";return s!==\"\"?r+\"(\"+s+\")\":r}function Q(e){return e.displayName||\"Context\"}function v(e){if(e==null)return null;if(typeof e.tag==\"number\"&&m(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case _:return\"Fragment\";case b:return\"Portal\";case X:return\"Profiler\";case y:return\"StrictMode\";case A:return\"Suspense\";case F:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case K:var t=e;return Q(t)+\".Consumer\";case H:var r=e;return Q(r._context)+\".Provider\";case k:return We(e,e.render,\"ForwardRef\");case N:var n=e.displayName||null;return n!==null?n:v(e.type)||\"Memo\";case U:{var s=e,l=s._payload,i=s._init;try{return v(i(l))}catch{return null}}}return null}var w=Object.assign,T=0,ee,te,re,ne,ae,oe,ie;function se(){}se.__reactDisabledLog=!0;function Ye(){{if(T===0){ee=console.log,te=console.info,re=console.warn,ne=console.error,ae=console.group,oe=console.groupCollapsed,ie=console.groupEnd;var e={configurable:!0,enumerable:!0,value:se,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}T++}}function $e(){{if(T--,T===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:w({},e,{value:ee}),info:w({},e,{value:te}),warn:w({},e,{value:re}),error:w({},e,{value:ne}),group:w({},e,{value:ae}),groupCollapsed:w({},e,{value:oe}),groupEnd:w({},e,{value:ie})})}T<0&&m(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var W=x.ReactCurrentDispatcher,Y;function C(e,t,r){{if(Y===void 0)try{throw Error()}catch(s){var n=s.stack.trim().match(/\\n( *(at )?)/);Y=n&&n[1]||\"\"}return`\n`+Y+e}}var $=!1,D;{var Me=typeof WeakMap==\"function\"?WeakMap:Map;D=new Me}function le(e,t){if(!e||$)return\"\";{var r=D.get(e);if(r!==void 0)return r}var n;$=!0;var s=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var l;l=W.current,W.current=null,Ye();try{if(t){var i=function(){throw Error()};if(Object.defineProperty(i.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(i,[])}catch(g){n=g}Reflect.construct(e,[],i)}else{try{i.call()}catch(g){n=g}e.call(i.prototype)}}else{try{throw Error()}catch(g){n=g}e()}}catch(g){if(g&&n&&typeof g.stack==\"string\"){for(var o=g.stack.split(`\n`),h=n.stack.split(`\n`),d=o.length-1,c=h.length-1;d>=1&&c>=0&&o[d]!==h[c];)c--;for(;d>=1&&c>=0;d--,c--)if(o[d]!==h[c]){if(d!==1||c!==1)do if(d--,c--,c<0||o[d]!==h[c]){var p=`\n`+o[d].replace(\" at new \",\" at \");return e.displayName&&p.includes(\"<anonymous>\")&&(p=p.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&D.set(e,p),p}while(d>=1&&c>=0);break}}}finally{$=!1,W.current=l,$e(),Error.prepareStackTrace=s}var R=e?e.displayName||e.name:\"\",_e=R?C(R):\"\";return typeof e==\"function\"&&D.set(e,_e),_e}function Ve(e,t,r){return le(e,!1)}function Le(e){var t=e.prototype;return!!(t&&t.isReactComponent)}function O(e,t,r){if(e==null)return\"\";if(typeof e==\"function\")return le(e,Le(e));if(typeof e==\"string\")return C(e);switch(e){case A:return C(\"Suspense\");case F:return C(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case k:return Ve(e.render);case N:return O(e.type,t,r);case U:{var n=e,s=n._payload,l=n._init;try{return O(l(s),t,r)}catch{}}}return\"\"}var P=Object.prototype.hasOwnProperty,ue={},fe=x.ReactDebugCurrentFrame;function S(e){if(e){var t=e._owner,r=O(e.type,e._source,t?t.type:null);fe.setExtraStackFrame(r)}else fe.setExtraStackFrame(null)}function ze(e,t,r,n,s){{var l=Function.call.bind(P);for(var i in e)if(l(e,i)){var o=void 0;try{if(typeof e[i]!=\"function\"){var h=Error((n||\"React class\")+\": \"+r+\" type `\"+i+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[i]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw h.name=\"Invariant Violation\",h}o=e[i](t,i,n,r,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(d){o=d}o&&!(o instanceof Error)&&(S(s),m(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",n||\"React class\",r,i,typeof o),S(null)),o instanceof Error&&!(o.message in ue)&&(ue[o.message]=!0,S(s),m(\"Failed %s type: %s\",r,o.message),S(null))}}}var Be=Array.isArray;function M(e){return Be(e)}function qe(e){{var t=typeof Symbol==\"function\"&&Symbol.toStringTag,r=t&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return r}}function Ge(e){try{return de(e),!1}catch{return!0}}function de(e){return\"\"+e}function ce(e){if(Ge(e))return m(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",qe(e)),de(e)}var j=x.ReactCurrentOwner,Xe={key:!0,ref:!0,__self:!0,__source:!0},me,he,V;V={};function He(e){if(P.call(e,\"ref\")){var t=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(t&&t.isReactWarning)return!1}return e.ref!==void 0}function Ke(e){if(P.call(e,\"key\")){var t=Object.getOwnPropertyDescriptor(e,\"key\").get;if(t&&t.isReactWarning)return!1}return e.key!==void 0}function Je(e,t){if(typeof e.ref==\"string\"&&j.current&&t&&j.current.stateNode!==t){var r=v(j.current.type);V[r]||(m('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',v(j.current.type),e.ref),V[r]=!0)}}function Ze(e,t){{var r=function(){me||(me=!0,m(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",t))};r.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:r,configurable:!0})}}function Qe(e,t){{var r=function(){he||(he=!0,m(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",t))};r.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:r,configurable:!0})}}var et=function(e,t,r,n,s,l,i){var o={$$typeof:a,type:e,key:t,ref:r,props:i,_owner:l};return o._store={},Object.defineProperty(o._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(o,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:n}),Object.defineProperty(o,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:s}),Object.freeze&&(Object.freeze(o.props),Object.freeze(o)),o};function tt(e,t,r,n,s){{var l,i={},o=null,h=null;r!==void 0&&(ce(r),o=\"\"+r),Ke(t)&&(ce(t.key),o=\"\"+t.key),He(t)&&(h=t.ref,Je(t,s));for(l in t)P.call(t,l)&&!Xe.hasOwnProperty(l)&&(i[l]=t[l]);if(e&&e.defaultProps){var d=e.defaultProps;for(l in d)i[l]===void 0&&(i[l]=d[l])}if(o||h){var c=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;o&&Ze(i,c),h&&Qe(i,c)}return et(e,o,h,s,n,j.current,i)}}var L=x.ReactCurrentOwner,pe=x.ReactDebugCurrentFrame;function E(e){if(e){var t=e._owner,r=O(e.type,e._source,t?t.type:null);pe.setExtraStackFrame(r)}else pe.setExtraStackFrame(null)}var z;z=!1;function B(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===a}function be(){{if(L.current){var e=v(L.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function rt(e){{if(e!==void 0){var t=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),r=e.lineNumber;return`\n\nCheck your code at `+t+\":\"+r+\".\"}return\"\"}}var ve={};function nt(e){{var t=be();if(!t){var r=typeof e==\"string\"?e:e.displayName||e.name;r&&(t=`\n\nCheck the top-level render call using <`+r+\">.\")}return t}}function ge(e,t){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var r=nt(t);if(ve[r])return;ve[r]=!0;var n=\"\";e&&e._owner&&e._owner!==L.current&&(n=\" It was passed a child from \"+v(e._owner.type)+\".\"),E(e),m('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',r,n),E(null)}}function ye(e,t){{if(typeof e!=\"object\")return;if(M(e))for(var r=0;r<e.length;r++){var n=e[r];B(n)&&ge(n,t)}else if(B(e))e._store&&(e._store.validated=!0);else if(e){var s=De(e);if(typeof s==\"function\"&&s!==e.entries)for(var l=s.call(e),i;!(i=l.next()).done;)B(i.value)&&ge(i.value,t)}}}function at(e){{var t=e.type;if(t==null||typeof t==\"string\")return;var r;if(typeof t==\"function\")r=t.propTypes;else if(typeof t==\"object\"&&(t.$$typeof===k||t.$$typeof===N))r=t.propTypes;else return;if(r){var n=v(t);ze(r,e.props,\"prop\",n,e)}else if(t.PropTypes!==void 0&&!z){z=!0;var s=v(t);m(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",s||\"Unknown\")}typeof t.getDefaultProps==\"function\"&&!t.getDefaultProps.isReactClassApproved&&m(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function ot(e){{for(var t=Object.keys(e.props),r=0;r<t.length;r++){var n=t[r];if(n!==\"children\"&&n!==\"key\"){E(e),m(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",n),E(null);break}}e.ref!==null&&(E(e),m(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),E(null))}}function it(e,t,r,n,s,l){{var i=Ue(e);if(!i){var o=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(o+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var h=rt(s);h?o+=h:o+=be();var d;e===null?d=\"null\":M(e)?d=\"array\":e!==void 0&&e.$$typeof===a?(d=\"<\"+(v(e.type)||\"Unknown\")+\" />\",o=\" Did you accidentally export a JSX literal instead of a component?\"):d=typeof e,m(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",d,o)}var c=tt(e,t,r,s,l);if(c==null)return c;if(i){var p=t.children;if(p!==void 0)if(n)if(M(p)){for(var R=0;R<p.length;R++)ye(p[R],e);Object.freeze&&Object.freeze(p)}else m(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else ye(p,e)}return e===_?ot(c):at(c),c}}var st=it;G.Fragment=_,G.jsxDEV=st})()});var je=q((Et,Te)=>{\"use strict\";Te.exports=Re()});var yt={};mt(yt,{default:()=>gt,frontmatter:()=>bt});var f=ht(je()),bt={title:\"Thinking In Public\",slug:\"thinking-in-public\",date:new Date(1659451838e3),date_updated:new Date(1663078608e3),tags:[],summary:\"\",draft:!1};function ke(u){let a=Object.assign({h4:\"h4\",a:\"a\",span:\"span\",p:\"p\",em:\"em\",code:\"code\",img:\"img\"},u.components);return(0,f.jsxDEV)(f.Fragment,{children:[(0,f.jsxDEV)(a.h4,{id:\"why-its-important-for-leaders-to-brainstorm-and-discuss-ideas-in-a-way-that-allows-the-rest-of-the-company-to-interact-and-gain-insights-into-decisions\",children:[(0,f.jsxDEV)(a.a,{href:\"#why-its-important-for-leaders-to-brainstorm-and-discuss-ideas-in-a-way-that-allows-the-rest-of-the-company-to-interact-and-gain-insights-into-decisions\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,f.jsxDEV)(a.span,{className:\"icon icon-link\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\"},this)},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\"},this),\"Why it\\u2019s important for leaders to brainstorm and discuss ideas in a way that allows the rest of the company to interact and gain insights into decisions\"]},void 0,!0,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:11,columnNumber:1},this),(0,f.jsxDEV)(a.p,{children:\"Remote work has pushed us to messaging apps. Conversations that used to happen in the hallways of your office happen on Slack and Microsoft Teams and Discord now. However, the serendipitous communication that arose from in-person work is not gone with remote work. It just requires more intentionality.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:13,columnNumber:1},this),(0,f.jsxDEV)(a.p,{children:[\"Part of that intentionality is \",(0,f.jsxDEV)(a.em,{children:\"thinking in public\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:15,columnNumber:32},this),\".\"]},void 0,!0,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:15,columnNumber:1},this),(0,f.jsxDEV)(a.p,{children:[\"At \",(0,f.jsxDEV)(a.a,{href:\"https://pinata.cloud\",children:\"Pinata\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:17,columnNumber:4},this),\", early on\\u2014when the company was just four people\\u2014we knew dreaming big was going to be important, but we also knew the best way to dream in color was to share our thought process along the way. It started with a slack channel called \",(0,f.jsxDEV)(a.code,{children:\"#pinnies-dreamland\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:17,columnNumber:266},this),\". \",(0,f.jsxDEV)(a.img,{alt:\"\",src:\"https://cdn-images-1.medium.com/max/800/1*ivWUrhC7lmwolfpunWuwuA@2x.png\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:18,columnNumber:1},this),\" The channel was a start. It was permission to talk openly without fear of the what-ifs creeping in. It was permission to explore the possible and, more important, the potentially \",(0,f.jsxDEV)(a.em,{children:\"impossible\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:19,columnNumber:180},this),\". But alone, the channel was just an idea factory in isolation. In order to propose ideas with substance, a shared understanding of multiple concentrations was necessary. Where is the company now? Where is the company going? What could change the trajectory? What does the market look like? What are leading indicators? What are lagging indicators? And so much more.\"]},void 0,!0,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:17,columnNumber:1},this),(0,f.jsxDEV)(a.p,{children:\"In the often isolated silo of remote work, it\\u2019s hard to keep people on the same page, so constant communication is key. But how do you balance constant communication with the very real possibility that you run into information overload? I think the answer to this is to not balance it. In truth, more information, even if it gets buried, is better than no information. A company that has the opportunity to see the thought process of leaders and contribute to that thought process will have an advantage over one that discusses the future behind closed doors.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:21,columnNumber:1},this),(0,f.jsxDEV)(a.p,{children:\"So, if we aren\\u2019t solving for information overload, we should at least optimize for information reception, right?\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:23,columnNumber:1},this),(0,f.jsxDEV)(a.p,{children:\"In a world where messaging apps like Slack become the de facto communication medium, it\\u2019s important that people understand where to look for info and how to contribute. I don\\u2019t think Pinata has completely solved this, but one of the things we instilled early one\\u2014back when we were a company of four\\u2014was that every conversation was open to every member of the company. If you read something that you felt applied to the business, you should share it. Give your perspective, comments on others\\u2019 perspectives. If you heard from a customer, share the insight. If you saw a market signal, you should share that with the team and explain why it matters.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:25,columnNumber:1},this),(0,f.jsxDEV)(a.p,{children:\"This type of communication requires full trust. It requires respect. It requires a complete lack of ego. You have to be comfortable as a CEO or a CTO sharing ideas that even the newest hire might push back against. You also, as the newest hire, must be comfortable offering your opinions and having a back-and-forth conversation with anyone else at the company.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:27,columnNumber:1},this),(0,f.jsxDEV)(a.p,{children:\"An all-hands meeting is a good way to convey information top-down. These types of meetings are useful, but they are not a substitute for thinking in public. All-hands meetings are less collaborative than open, asynchronous communication. They are good for distributing important facts but not for healthy discourse on the varied opinions a team might have on the company or market\\u2019s current or future state.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:29,columnNumber:1},this),(0,f.jsxDEV)(a.p,{children:\"A half-formed thought, posted on slack or even shared in an email with others, can often lead to fully formed product decisions later. But that can only happen if you\\u2019re willing to share. It can only happen if you\\u2019re willing to participate when others share. Messages will get lost. But by at least providing the opportunity for others to share in your thought process, you are creating an organization of horizontal leadership. Ideas don\\u2019t form in isolation when you think in public. They form concurrently. They form across a horizon of shared understanding. And the company is better for it.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:31,columnNumber:1},this),(0,f.jsxDEV)(a.p,{children:\"Optimize for participation, but don\\u2019t skip out on thinking in public just because you don\\u2019t have the perfect formula for doing so. Share, collaborate, and communicate without fear of being wrong, without consideration of titles and positions in the hierarchy of the organization. Work as the creative people you are, and you will find that the entire organization starts to pull in the same direction much easier.\"},void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:33,columnNumber:1},this)]},void 0,!0,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\",lineNumber:1,columnNumber:1},this)}function vt(u={}){let{wrapper:a}=u.components||{};return a?(0,f.jsxDEV)(a,Object.assign({},u,{children:(0,f.jsxDEV)(ke,u,void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\"},this)}),void 0,!1,{fileName:\"/Users/polluterofminds/Development/tailwind-nextjs-starter-blog/_mdx_bundler_entry_point-0aa01df4-6328-490f-ab37-0b3d93396aee.mdx\"},this):ke(u)}var gt=vt;return pt(yt);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "blog/thinking-in-public.mdx",
  "_raw": {
    "sourceFilePath": "blog/thinking-in-public.mdx",
    "sourceFileName": "thinking-in-public.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/thinking-in-public"
  },
  "type": "Blog",
  "readingTime": {
    "text": "4 min read",
    "minutes": 3.705,
    "time": 222300,
    "words": 741
  },
  "slug": "thinking-in-public",
  "path": "blog/thinking-in-public",
  "filePath": "blog/thinking-in-public.mdx",
  "toc": [
    {
      "value": "Why it’s important for leaders to brainstorm and discuss ideas in a way that allows the rest of the company to interact and gain insights into decisions",
      "url": "#why-its-important-for-leaders-to-brainstorm-and-discuss-ideas-in-a-way-that-allows-the-rest-of-the-company-to-interact-and-gain-insights-into-decisions",
      "depth": 4
    }
  ],
  "structuredData": {
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    "headline": "Thinking In Public",
    "datePublished": "2022-08-02T14:50:38.000Z",
    "dateModified": "2022-08-02T14:50:38.000Z",
    "description": "",
    "image": "/static/images/twitter-card.png",
    "url": "https://polluterofminds.com/blog/thinking-in-public"
  }
}